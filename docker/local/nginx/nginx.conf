# Define upstream Django application server
upstream api {
    server api:8000;
}

# Custom log format to include Django user information and detailed request metrics
log_format detailed_log '$remote_addr - $upstream_http_x_django_user - [$time_local]'
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        '$request_time $upstream_response_time '
                        '"$http_x_forwarded_for" ';

# Main server configuration
server {
    listen 80;

    # Set maximum upload size to 20 megabytes
    client_max_body_size 20M;
    
    # Main error log configuration
    error_log /var/log/nginx/error.log error;

    # Standard proxy headers for proper request forwarding
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Allow Django custom user header to pass through
    proxy_pass_header X-Django-User;

    # API endpoints configuration
    location /api/v1/ {
        proxy_pass http://api;
        
        # Separate logging for API requests
        access_log /var/log/api_access.log detailed_log;
        error_log /var/log/api_error.log error;
    }

    # Admin/secure endpoints configuration
    location /supersecret/ {
        proxy_pass http://api;
        
        # Separate logging for admin access
        access_log /var/log/nginx/admin_access.log detailed_log;
    }   

    # Static files serving configuration
    location /static/ {
        alias /app/staticfiles;
        # Enable 30-day caching for static files
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }
}